import numpy as np

from piecewisePolyEvalr import PiecewisePolynomialEvaluator

functionName = 'tanh'

# old
segmentMaxs = [8, 6, 4, 3, 2, 1.5, 1, 0.5]
segmentDeltas = [-7.0, -5.0, -3.5, -2.5, -1.75, -1.25, -0.75, -0.25]
segmentCoeffs = [
    [2.626083583294295e-06, 0.00014329645362991331, 0.0025168688591079, 0.017636261046690548, 0.0631145997743068, 0.10727083839294765, 0.03843336385773858, -0.2531140493029499],
    [-4.377610135167936e-06, -0.00023892149082051575, -0.0038972677829548358, -0.027989663719801203, -0.1083947745530156, -0.23850728389360698, -0.37358073480770426, -0.22291700767860625],
    [3.2848608003286833e-06, 0.000179335242663594, 0.003638307479364427, 0.026576835552163166, 0.11381089295612541, 0.2804213752017678, 0.5966068624762726, 0.9399908966824295],
    [0.9999984434418286, 0.9999150130421632, 0.9981844937536778, 0.9866582281584427, 0.9413833770814556, 0.848287582896897, 0.6351155798920621, 0.24487311569734088],
]
# <= 4 ULPs
segmentMaxs = [8, 4, 3, 2.5, 2, 1.5, 1, 0.5, 0.25]
segmentDeltas = [-6.0, -3.5, -2.75, -2.25, -1.75, -1.25, -0.75, -0.375, -0.125]
segmentCoeffs = [
    [-5.172475604026983e-05, -0.0038174454576165437, -0.016274314907334105, -0.04297293955993319, -0.1080190739125125, -0.23832206943272866, -0.37518210046932476, -0.3107671636592512, -0.12168643704217105],
    [8.770582916815813e-05, 0.004013749334583426, 0.016612467139003655, 0.04448630003082863, 0.11617674804426431, 0.28444928425962157, 0.5980647414647905, 0.8699072659157759, 0.9816125703610087],
    [0.9999877116507953, 0.9981778976111982, 0.9918597245682075, 0.9780261147388134, 0.9413755384972872, 0.8482836399575124, 0.635148952387287, 0.35835739835078584, 0.12435300177159615],
]

def tanh(x: np.ndarray) -> np.ndarray:
    return np.tanh(x)

negate = [0, -1] # for handling negative x

tanhPolyEvaluator = PiecewisePolynomialEvaluator(segmentMaxs, segmentDeltas, segmentCoeffs, negate)

goldenFunc = tanh
plynmlFunc = tanhPolyEvaluator.floatEval
fixPntFunc = tanhPolyEvaluator.fixPtEval
